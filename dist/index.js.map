{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * 合并图片\n * @param urls\n * @param direction\n */\nasync function mergeImages(\n    urls: string[],\n    direction: 'vertical' | 'horizontal' = 'horizontal',\n    width = 700,\n    height = 700,\n) {\n    const images = await getImgDomObjs(urls);\n    if (direction === 'horizontal') {\n        return drawImagesHorizontal(images, height);\n    } else {\n        return drawImagesVertical(images, width);\n    }\n}\n\n/**\n * 根据图片地址获取图片对象\n * @param urls\n * @returns\n */\nfunction getImgDomObjs(urls: string[]): Promise<HTMLImageElement[]> {\n    return new Promise((resolve) => {\n        const length = urls.length;\n        const instances: HTMLImageElement[] = [];\n        let finished = 0;\n        urls.forEach((url, index) => {\n            const image = new Image();\n            image.src = url;\n            image.crossOrigin = 'Anonymous';\n            image.onload = () => {\n                // 图片实例化成功后存起来\n                instances[index] = image;\n                finished++;\n                if (finished === length) {\n                    resolve(instances);\n                }\n            };\n        });\n    });\n}\n\n/**\n * 根据传入的图片对象竖直方向拼接图片\n * @param images\n * @returns\n */\nfunction drawImagesVertical(images: HTMLImageElement[], width: number) {\n    // 拼出来的图片的质量，0-1之间，越大质量越好\n    const encoderOptions = 0.5;\n    const heights = images.map((item) => (width / item.width) * item.height);\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = heights.reduce((total, current) => total + current);\n    const context = canvas.getContext('2d');\n    let y = 0;\n    images.forEach((item, index) => {\n        const height = heights[index];\n        context?.drawImage(item, 0, y, width, height);\n        y += height;\n    });\n\n    const base64 = canvas.toDataURL('image/jpeg', encoderOptions);\n    return base64;\n}\n\n/**\n * 水平方向拼接图片\n * @param images\n * @returns\n */\nfunction drawImagesHorizontal(images: HTMLImageElement[], height: number) {\n    // 拼出来的图片的质量，0-1之间，越大质量越好\n    const encoderOptions = 0.5;\n    const widths = images.map((item) => (height / item.height) * item.width);\n    const canvas = document.createElement('canvas');\n    canvas.height = height;\n    canvas.width = widths.reduce((total, current) => total + current);\n    const context = canvas.getContext('2d');\n    let x = 0;\n    images.forEach((item, index) => {\n        const width = widths[index];\n        context?.drawImage(item, x, 0, width, height);\n        x += width;\n    });\n\n    const base64 = canvas.toDataURL('image/jpeg', encoderOptions);\n    return base64;\n}\n\nexport {mergeImages};\nexport default mergeImages;\n"],"names":["mergeImages","urls","direction","width","height","images","Promise","resolve","length","instances","finished","forEach","url","index","image","Image","src","crossOrigin","onload","getImgDomObjs","encoderOptions","widths","map","item","canvas","document","createElement","reduce","total","current","context","getContext","x","drawImage","toDataURL","drawImagesHorizontal","heights","y","drawImagesVertical"],"mappings":";;;;;;;;;;;;;;yXAKA,SAAeA,EACXC,EACAC,EAAuC,aACvCC,EAAQ,IACRC,EAAS,8CAET,MAAMC,QAaV,SAAuBJ,GACnB,OAAO,IAAIK,SAASC,IAChB,MAAMC,EAASP,EAAKO,OACdC,EAAgC,GAClCC,IAAAA,EAAW,EACfT,EAAKU,SAAQ,CAACC,EAAKC,KACf,MAAMC,EAAQ,IAAIC,MAClBD,EAAME,IAAMJ,EACZE,EAAMG,YAAc,YACpBH,EAAMI,OAAS,KAEXT,EAAUI,GAASC,EACnBJ,IACIA,IAAaF,GACbD,EAAQE,UA3BHU,CAAclB,GAC/BC,MAAc,eAAdA,EA8DR,SAA8BG,EAA4BD,GAEhDgB,MAAAA,EAAiB,GACjBC,EAAShB,EAAOiB,KAAKC,GAAUnB,EAASmB,EAAKnB,OAAUmB,EAAKpB,QAC5DqB,EAASC,SAASC,cAAc,UACtCF,EAAOpB,OAASA,EAChBoB,EAAOrB,MAAQkB,EAAOM,QAAO,CAACC,EAAOC,IAAYD,EAAQC,IACzD,MAAMC,EAAUN,EAAOO,WAAW,MAC9BC,IAAAA,EAAI,EACR3B,EAAOM,SAAQ,CAACY,EAAMV,KAClB,MAAMV,EAAQkB,EAAOR,GACrBiB,MAAAA,GAAAA,EAASG,UAAUV,EAAMS,EAAG,EAAG7B,EAAOC,GACtC4B,GAAK7B,KAIT,OADeqB,EAAOU,UAAU,aAAcd,GA5EnCe,CAAqB9B,EAAQD,GAqC5C,SAA4BC,EAA4BF,GAE9CiB,MAAAA,EAAiB,GACjBgB,EAAU/B,EAAOiB,KAAKC,GAAUpB,EAAQoB,EAAKpB,MAASoB,EAAKnB,SAC3DoB,EAASC,SAASC,cAAc,UACtCF,EAAOrB,MAAQA,EACfqB,EAAOpB,OAASgC,EAAQT,QAAO,CAACC,EAAOC,IAAYD,EAAQC,IAC3D,MAAMC,EAAUN,EAAOO,WAAW,MAC9BM,IAAAA,EAAI,EACRhC,EAAOM,SAAQ,CAACY,EAAMV,KAClB,MAAMT,EAASgC,EAAQvB,GACvBiB,MAAAA,GAAAA,EAASG,UAAUV,EAAM,EAAGc,EAAGlC,EAAOC,GACtCiC,GAAKjC,KAIT,OADeoB,EAAOU,UAAU,aAAcd,GAlDnCkB,CAAmBjC,EAAQF"}